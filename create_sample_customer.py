#!/usr/bin/env python3
"""
‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import app
from database import get_cursor, get_db
from werkzeug.security import generate_password_hash

def create_sample_customer():
    """‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á"""
    with app.app_context():
        try:
            cursor = get_cursor()
            if not cursor:
                print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ")
                return False
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            cursor.execute("""
                SELECT u.username, c.first_name, c.last_name
                FROM users u
                JOIN customers c ON u.user_id = c.user_id
                WHERE u.username = 'customer01' AND u.role_name = 'customer'
            """)
            existing_customer = cursor.fetchone()
            
            if existing_customer:
                print(f"‚úÖ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß: {existing_customer['first_name']} {existing_customer['last_name']} ({existing_customer['username']})")
                return True
            
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á user ‡πÉ‡∏´‡∏°‡πà
            username = 'customer01'
            password = '123456'
            name = '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á'
            password_hash = generate_password_hash(password, method='pbkdf2:sha256')
            
            print(f"üîß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á...")
            print(f"   Username: {username}")
            print(f"   Password: {password}")
            print(f"   Name: {name}")
            
            # ‡πÄ‡∏û‡∏¥‡πà‡∏° user
            cursor.execute('''
                INSERT INTO users (username, password_hash, name, role_name) 
                VALUES (%s, %s, %s, %s)
            ''', (username, password_hash, name, 'customer'))
            
            user_id = cursor.lastrowid
            print(f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á user ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (ID: {user_id})")
            
            # ‡πÄ‡∏û‡∏¥‡πà‡∏° customer
            cursor.execute('''
                INSERT INTO customers (user_id, first_name, last_name, phone, email) 
                VALUES (%s, %s, %s, %s, %s)
            ''', (user_id, '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤', '‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á', '0812345678', 'customer@example.com'))
            
            customer_id = cursor.lastrowid
            print(f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á customer ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (ID: {customer_id})")
            
            # Commit transaction
            get_db().commit()
            print("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            
            print("\nüéâ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
            print("=" * 50)
            print("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô:")
            print(f"Username: {username}")
            print(f"Password: {password}")
            print("=" * 50)
            
            return True
            
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
            # Rollback transaction
            try:
                get_db().rollback()
            except:
                pass
            return False

if __name__ == '__main__':
    print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á...")
    success = create_sample_customer()
    if success:
        print("\n‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!")
    else:
        print("\n‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß!")
        sys.exit(1)
